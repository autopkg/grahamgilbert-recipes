<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Description</key>
    <string>Downloads the current release of Crypt from Github and imports into Munki.
    </string>
    <key>Identifier</key>
    <string>com.github.grahamgilbert.Crypt.munki</string>
    <key>Input</key>
    <dict>
        <key>MUNKI_REPO_SUBDIR</key>
        <string>apps/Crypt</string>
        <key>NAME</key>
        <string>Crypt2</string>
        <key>pkginfo</key>
        <dict>
            <key>catalogs</key>
            <array>
                <string>testing</string>
            </array>
            <key>description</key>
            <string>Crypt is a Filevault 2 Escrow solution.</string>
            <key>name</key>
            <string>%NAME%</string>
            <key>minimum_os_version</key>
            <string>12.0</string>
            <key>unattended_install</key>
            <true/>
        </dict>
    </dict>
    <key>MinimumVersion</key>
    <string>0.5.0</string>
    <key>ParentRecipe</key>
    <string>com.github.grahamgilbert.Crypt.download</string>
    <key>Process</key>
    <array>
        <dict>
            <key>Arguments</key>
            <dict>
                <key>flat_pkg_path</key>
                <string>%pathname%</string>
                <key>destination_path</key>
                <string>%RECIPE_CACHE_DIR%/unpack</string>
            </dict>
            <key>Processor</key>
            <string>FlatPkgUnpacker</string>
        </dict>
        <dict>
            <key>Arguments</key>
            <dict>
                <key>pkg_payload_path</key>
                <string>%RECIPE_CACHE_DIR%/unpack/Payload</string>
                <key>destination_path</key>
                <string>%RECIPE_CACHE_DIR%/payload</string>
            </dict>
            <key>Processor</key>
            <string>PkgPayloadUnpacker</string>
        </dict>
        <dict>
            <key>Arguments</key>
            <dict>
                <key>input_plist_path</key>
                <string>%RECIPE_CACHE_DIR%/payload/Library/Security/SecurityAgentPlugins/Crypt.bundle/Contents/Info.plist</string>
            </dict>
            <key>Processor</key>
            <string>Versioner</string>
        </dict>
        <dict>
            <key>Arguments</key>
            <dict>
                <key>path_list</key>
                <array>
                    <string>%RECIPE_CACHE_DIR%/unpack</string>
                    <string>%RECIPE_CACHE_DIR%/payload</string>
                </array>
            </dict>
            <key>Processor</key>
            <string>PathDeleter</string>
        </dict>
                <dict>
            <key>Processor</key>
            <string>MunkiPkginfoMerger</string>
            <key>Arguments</key>
            <dict>
                <key>additional_pkginfo</key>
                <dict>
                    <key>installcheck_script</key>
                    <string>#!/bin/sh

function exit_if_path_not_exist() {
    if [ ! -e "$1" ]; then
        echo "File or directory $1 does not exist. Exiting."
        exit 0
    fi
}

function is_version_gt() { 
    test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; 
}

# Make sure the paths exist
exit_if_path_not_exist "/Library/Security/SecurityAgentPlugins/Crypt.bundle"
exit_if_path_not_exist "/Library/LaunchDaemons/com.grahamgilbert.crypt.plist"
exit_if_path_not_exist "/Library/Crypt/checkin"

plugin_version=$(defaults read /Library/Security/SecurityAgentPlugins/Crypt.bundle/Contents/Info.plist CFBundleShortVersionString)
checkin_version=$(/Library/Crypt/checkin -version)

desired_version="%version%"
if is_version_gt $desired_version $plugin_version; then
    echo "Plugin version is lower than desired version"
    exit 0
fi

if is_version_gt $desired_version $checkin_version; then
    echo "Checkin version is lower than desired version"
    exit 0
fi

# Check the mechs are installed
/Library/Crypt/checkin -check-auth-mechs

if [ $? -ne 0 ]; then
    echo "Auth mechs are not installed"
    exit 0
fi

exit 1
</string>
                    <key>preuninstall_script</key>
                    <string>#!/bin/sh
/Library/Crypt/checkin -uninstall
</string>
                </dict>
            </dict>
        </dict>
        <dict>
            <key>Arguments</key>
            <dict>
                <key>pkg_path</key>
                <string>%pathname%</string>
                <key>repo_subdirectory</key>
                <string>%MUNKI_REPO_SUBDIR%</string>
            </dict>
            <key>Processor</key>
            <string>MunkiImporter</string>
        </dict>
    </array>
</dict>
</plist>
